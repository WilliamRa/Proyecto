{"ast":null,"code":"var _jsxFileName = \"/home/william/workspace/prueba-react/src/components/chat.js\";\nimport React, { Component } from 'react';\nimport { newPost, getPost } from '../actions/insert';\nimport { connect } from 'react-redux';\nimport Comentarios from './Comentarios';\nimport './../css/chat.css';\nimport { Redirect } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.props.getPost();\n    };\n\n    this.action = (values, id, name) => {\n      this.props.newPost(values, id, name);\n      document.getElementById(\"txt\").value = \"\";\n    };\n\n    this.state = {\n      textArea: \"\"\n    };\n  }\n\n  render() {\n    if (this.props.session) {\n      const _this$props$session = this.props.session,\n            id = _this$props$session.id,\n            name = _this$props$session.name;\n      return React.createElement(Grid, {\n        container: true,\n        className: \"container-chat\",\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Bienvenido \", this.props.session.name), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"txt\",\n        label: \"Ingrese Nuevo Post\",\n        fullWidth: true,\n        variant: \"outlined\",\n        multiline: true,\n        rows: 3,\n        rowsMax: 4,\n        onChange: event => this.setState({\n          textArea: event.target.value\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"cont-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        className: \"theme\",\n        onClick: () => this.action(this.state.textArea, id, name),\n        disabled: !this.state.textArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Publicar\")), React.createElement(\"div\", {\n        className: \"chat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.post.map((message, key) => {\n        return React.createElement(Comentarios, {\n          message: message,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        });\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  post: state.postReducer.array,\n  session: state.sessionReducer.currentUser\n});\n\nexport default connect(mapStateToProps, {\n  newPost,\n  getPost\n})(Chat);","map":{"version":3,"sources":["/home/william/workspace/prueba-react/src/components/chat.js"],"names":["React","Component","newPost","getPost","connect","Comentarios","Redirect","Grid","TextField","Button","Chat","constructor","props","componentDidMount","action","values","id","name","document","getElementById","value","state","textArea","render","session","event","setState","target","post","map","message","key","mapStateToProps","postReducer","array","sessionReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { newPost, getPost } from '../actions/insert'\nimport { connect } from 'react-redux';\nimport Comentarios from './Comentarios';\nimport './../css/chat.css';\nimport { Redirect } from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button'\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      textArea: \"\"\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.getPost()\n  }\n\n  action = (values, id, name) => {\n    this.props.newPost(values, id, name)\n    document.getElementById(\"txt\").value = \"\"\n  }\n\n  render() {\n    if (this.props.session) {\n      const { id, name } = this.props.session;\n      return (\n        <Grid container className=\"container-chat\" spacing={2}>\n          <Grid item xs={12}>\n            <h2>Bienvenido {this.props.session.name}</h2>\n              <form>\n                <div className=\"form-text\">\n                  <TextField\n                    id=\"txt\"\n                    label=\"Ingrese Nuevo Post\"\n                    fullWidth\n                    variant=\"outlined\"\n                    multiline\n                    rows={3}\n                    rowsMax={4}\n                    onChange={(event) => this.setState({ textArea: event.target.value })}\n                  />\n                </div>\n              </form>\n              <div className=\"cont-button\">\n                <Button variant=\"contained\" className=\"theme\"\n                  onClick={() => this.action(this.state.textArea, id, name)}\n                  disabled={!this.state.textArea}>Publicar</Button>\n              </div>\n\n              <div className=\"chat\">\n                {\n                  this.props.post.map((message, key) => {\n                    return <Comentarios message={message} key={key} />\n                  })\n                }\n              </div>\n          </Grid>\n        </Grid >\n      );\n    } else {\n      return (\n        <div className=\"\">\n          <Redirect to=\"/\" />\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  post: state.postReducer.array,\n  session: state.sessionReducer.currentUser\n\n})\n\n\n\n\n\n\nexport default connect(mapStateToProps, { newPost, getPost })(Chat); "]},"metadata":{},"sourceType":"module"}