{"ast":null,"code":"var _jsxFileName = \"/home/william/workspace/prueba-react/src/components/Comentarios.js\";\nimport React, { Component } from 'react';\nimport './../css/chat.css';\nimport { connect } from 'react-redux';\nimport { Delete, editPost, likesPost, disLikePost } from '../actions/insert';\nimport './../css/chat.css';\nimport { ThumbUpAltOutlined, ThumbUp } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nclass Comentarios extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEliminar = id => {\n      const confirmar = window.confirm(\"Este Post sera eliminado Â¿Quiere Continuar?\");\n\n      if (confirmar === true) {\n        this.props.Delete(id);\n      }\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        showMe: true\n      });\n    };\n\n    this.handleEdit = (message, id, userID, name) => {\n      this.setState({\n        showMe: false\n      });\n      this.props.editPost(message, id, userID, name);\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        showMe: false\n      });\n    };\n\n    this.handleLike = (id, like, userID) => {\n      this.props.likesPost(id, like, userID);\n    };\n\n    this.getIcon = (like, id) => {\n      const resultLike = like ? like.find(ele => {\n        return ele === id;\n      }) : undefined;\n      return resultLike;\n    };\n\n    this.handleDislike = (userID, like, id) => {\n      this.props.disLikePost(userID, like, id);\n    };\n\n    this.state = {\n      showMe: false,\n      textArea: \"\",\n      liked: false\n    };\n  }\n\n  render() {\n    const name = this.props.session.name;\n    const _this$props$message = this.props.message,\n          message = _this$props$message.message,\n          username = _this$props$message.username,\n          id = _this$props$message.id,\n          like = _this$props$message.like;\n    const userID = this.props.session.id;\n    const resultLike = this.getIcon(like, userID);\n    return React.createElement(Grid, {\n      className: \"comentarios\",\n      direction: \"column\",\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.showMe ? null : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, message), this.state.showMe ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: \"edit-chat\",\n      fullWidth: true,\n      multiline: true,\n      rows: 3,\n      rowsMax: 4,\n      onChange: event => this.setState({\n        textArea: event.target.value\n      }),\n      defaultValue: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      onClick: () => this.handleEdit(this.state.textArea, id, userID, name),\n      disabled: !this.state.textArea,\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Publicar\"), React.createElement(\"button\", {\n      onClick: () => this.handleCancel(),\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Cancelar\")) : null), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" Autor:  \", username), React.createElement(\"span\", {\n      className: \"prueba\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, !resultLike && React.createElement(ThumbUpAltOutlined, {\n      onClick: event => this.handleLike(id, like, userID),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), !like ? 0 : like.length, resultLike && React.createElement(ThumbUp, {\n      onClick: event => this.handleDislike(userID, like, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))), this.state.showMe ? null : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.props.session.name === username && React.createElement(\"button\", {\n      onClick: () => this.handleEliminar(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Eliminar\"), this.props.session.name === username && React.createElement(\"button\", {\n      onClick: () => this.handleShow(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Editar\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  session: state.sessionReducer.currentUser\n});\n\nexport default connect(mapStateToProps, {\n  Delete,\n  editPost,\n  likesPost,\n  disLikePost\n})(Comentarios); // <Icon onClick={(event) => this.handleLike(id, like,userID )} ></Icon>","map":{"version":3,"sources":["/home/william/workspace/prueba-react/src/components/Comentarios.js"],"names":["React","Component","connect","Delete","editPost","likesPost","disLikePost","ThumbUpAltOutlined","ThumbUp","TextField","Grid","Comentarios","constructor","props","handleEliminar","id","confirmar","window","confirm","handleShow","setState","showMe","handleEdit","message","userID","name","handleCancel","handleLike","like","getIcon","resultLike","find","ele","undefined","handleDislike","state","textArea","liked","render","session","username","event","target","value","length","mapStateToProps","sessionReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './../css/chat.css';\nimport { connect } from 'react-redux';\nimport { Delete, editPost, likesPost, disLikePost } from '../actions/insert';\nimport './../css/chat.css';\nimport { ThumbUpAltOutlined, ThumbUp } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass Comentarios extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showMe: false,\n      textArea: \"\",\n      liked: false,\n    }\n  }\n\n  handleEliminar = (id) => {\n    const confirmar = window.confirm(\"Este Post sera eliminado Â¿Quiere Continuar?\")\n    if (confirmar === true) {\n      this.props.Delete(id)\n    }\n  }\n\n  handleShow = () => {\n    this.setState({\n      showMe: true\n    })\n  }\n\n  handleEdit = (message, id, userID, name) => {\n    this.setState({\n      showMe: false\n    })\n    this.props.editPost(message, id, userID, name);\n  }\n\n  handleCancel = () => {\n    this.setState({\n      showMe: false\n    })\n  }\n\n  handleLike = (id, like, userID) => {\n    this.props.likesPost(id, like, userID)\n  }\n\n  getIcon = (like, id) => {\n    const resultLike = like ? like.find((ele) => { return ele === id }) : undefined\n    return resultLike\n  }\n\n  handleDislike = (userID, like, id) => {\n    this.props.disLikePost(userID, like, id)\n  }\n\n  render() {\n    const { name } = this.props.session;\n    const { message, username, id, like } = this.props.message\n    const userID = this.props.session.id;\n    const resultLike = this.getIcon(like, userID)\n\n    return (\n      <Grid className=\"comentarios\" direction=\"column\" container>\n        <Grid item xs={2}>\n          <div>\n            {this.state.showMe ? null : <p>{message}</p>}\n            {\n              this.state.showMe ?\n                <div >\n                  <form>\n                    <div className=\"form-text\">\n                      <TextField\n                        className=\"edit-chat\"\n                        fullWidth\n                        multiline\n                        rows={3}\n                        rowsMax={4}\n                        onChange={(event) => this.setState({ textArea: event.target.value })}\n                        defaultValue={message}\n                      />\n                    </div>\n                  </form>\n\n                  <button onClick={() => this.handleEdit(this.state.textArea, id, userID, name)}\n                    disabled={!this.state.textArea}\n                    className=\"\">Publicar</button>\n                  <button onClick={() => this.handleCancel()} className=\"\">Cancelar</button>\n                </div> : null\n            }\n          </div>\n          <div>\n            <div className=\"like\">\n              <span> Autor:  {username}</span>\n              <span className=\"prueba\">\n                {!resultLike && <ThumbUpAltOutlined onClick={(event) => this.handleLike(id, like, userID)} />}{!like ? 0 : like.length}\n                {resultLike && <ThumbUp onClick={(event) => this.handleDislike(userID, like, id)} />}\n              </span>\n            </div>\n\n          </div>\n          {\n            this.state.showMe ? null :\n              <div>\n                {this.props.session.name === username && <button onClick={() => this.handleEliminar(id)}>Eliminar</button>}\n                {this.props.session.name === username && <button onClick={() => this.handleShow()}>Editar</button>}\n              </div>\n          }\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  session: state.sessionReducer.currentUser,\n})\n\nexport default connect(mapStateToProps, { Delete, editPost, likesPost, disLikePost })(Comentarios);\n\n\n// <Icon onClick={(event) => this.handleLike(id, like,userID )} ></Icon>"]},"metadata":{},"sourceType":"module"}